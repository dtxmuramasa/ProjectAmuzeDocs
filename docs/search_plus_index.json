{"./":{"url":"./","title":"はじめに","keywords":"","body":"はじめに HonkitTemplateとは Honkitでプログラムの仕様書や設計書を作成するために必要なツール、プラグインをバンドルしたプロジェクトのテンプレートです。 もともとはGitbookTemplateでしたが、本体のGitbookがLegacyとなり新しい環境に導入できなくなったため、ForkされたHonkitに差し替えたものになります。azu様、ありがとうございます！ 注意事項 本テンプレートは日本語プロジェクトでの使用しか考慮していません。 This template is only considered for use in Japanese projects. 本テンプレートはWindows環境に合わせて作成しています。 Honkitの成り立ちから、ところどころにGitbookの表記があります。 ドキュメント生成環境構築手順 詳しくはドキュメント生成環境構築をご覧ください。 ドキュメントの生成、更新コマンド $ npm run build ドキュメント閲覧サーバ起動コマンド 下記コマンド実行後、http://localhost:4000で確認できます。 $ npm run serve 導入プラグイン まだHonkitに移行後、完全な互換性があるか確認できていません。 hide-published-with https://www.npmjs.com/package/gitbook-plugin-hide-published-with Gitbookへのpublishボタンを消します。 リポジトリなどは残っていないが、機能はする模様。 -lunr, -search https://www.npmjs.com/package/gitbook-plugin-lunr https://www.npmjs.com/package/gitbook-plugin-search 標準搭載されている検索エンジンを無効化します。 search-pro-kui https://www.npmjs.com/package/gitbook-plugin-search-pro-kui あらゆるutf-8文字の検索に高度に対応した検索エンジンプラグイン。 これを導入しないと日本語の部分検索が一部うまくいかないことがある。 例えば「環境構築」での検索で引っかかる文書が「構築」では引っかからなかったりなど。 uml https://www.npmjs.com/package/gitbook-plugin-uml plantUMLを扱うためのプラグイン。 expandable-chapters https://www.npmjs.com/package/gitbook-plugin-expandable-chapters サイドバーのメニューをCollapse/Expandできるツリービューにするプラグイン。 include-codeblock https://www.npmjs.com/package/gitbook-plugin-include-codeblock ファイルの内容を展開してくれるマクロを提供するプラグイン。 code-editor https://www.npmjs.com/package/gitbook-plugin-code-editor よくあるコードエディタとコードの実行結果が見られるアレ。 code https://www.npmjs.com/package/gitbook-plugin-code 複数行のコード記述に行数を表示してくれるプラグイン。 ライセンス 本テンプレートはHonkitのライセンスに準じています。 Apache License 2.0全文 "},"src/StructEnvironments/Generally.html":{"url":"src/StructEnvironments/Generally.html","title":"共通の環境構築","keywords":"","body":"共通の環境構築 Node.jsのインストール Node.jsをインストールします。 本ドキュメント執筆時点でのバージョンは下記。 $ node --version v16.15.0 $ npm --version 8.5.5 "},"src/StructEnvironments/BuildDocument.html":{"url":"src/StructEnvironments/BuildDocument.html","title":"ドキュメント生成環境構築","keywords":"","body":"ドキュメント生成環境構築 前提条件 共通の環境構築が完了していることを前提とします。 bashが動作するCLIが導入されていることを前提とします。 クローン済みのリポジトリがローカルにあることを前提とします。 以降の操作はローカルリポジトリのルートディレクトリ上で行います。 動作確認環境 VSCode: 1.67.2 GitBash(VSCodeTerminalから利用): mintty3.6.1 bash: GNU bash, version 4.4.23(1)-release (x86_64-pc-msys) プロビジョニングスクリプトの実行 プロビジョニングスクリプトを実行すると、自動的にドキュメント生成環境の構築が完了します。 何らかの理由により完了できなかった場合は後述の「手動で環境を構築する」セクションの手順を実行してください。 １．下記コマンドでプロビジョニングスクリプトを実行します。 $ bash provision.sh 手動で環境を構築する このセクションの手順は前述の「プロビジョニングスクリプトの実行」セクションの手順が成功しなかった場合にのみ行ってください。 １．nodeモジュールのインストール 下記コマンドでnodeモジュールのインストールを行います。 Honkit用のプラグインもここでインストールします。 $ npm install --save ２．ドキュメントのビルド ビルドを実行して環境構築の完了を確認します。 $ ./node_modules/.bin/honkit build ./ ./docs "},"src/Plan/Notes.html":{"url":"src/Plan/Notes.html","title":"企画メモ","keywords":"","body":"ゲーセンつくろう企画メモ ゲームの目的及び提供したい体験内容 リアルなゲームセンター運営を体験することが目的 小規模のゲームセンター一店舗から始まり、利益を出して増築、新規出店を行うことで自分だけのゲームセンター会社を経営する 他プレイヤーと機械・景品・スタッフのやり取りもできる どんな要素があるのか プライズゲームフロアの運営 フロアレイアウトシステム 発注管理システム ビデオゲームフロアの運営 機械メンテナンス 機械の導入 メダルゲームフロアの運営 ゲーム世界におけるトレンドシステム スタッフ管理システム 採用ガチャ 役割・作業割り振りシステム 出向システム 出向することで経験値や実績を獲得できる フロアレイアウトシステム 通路の広さや直線の長さ、出入口の位置や距離などに応じてメイン導線などを自動で判定する メイン導線からのアクセスのしやすさなどで通路ごとに売上やアクセス数が変化する メイン導線付近などは売上やアクセス数が上がる トレンドシステム カテゴリごとに流行度合いのパラメータを持ち、流行度合いごとにプライズやビデオゲームの売り上げ、または入店率に影響を及ぼすシステム ゲーム内の一定期間においてランダムで更新される 大きく数値が変動する場合はゲーム内のニュースになる 小さく数値が変動する場合は親しいお客さんとの雑談から情報を得られる 発注管理システム 自分で景品を選び、売れ行きを予想して発注を行うことができるシステム 先行発注(三か月前発注)の物と通常発注ができる物と分かれる 本社割り振りもあり？　→　これはアウトかも？？ "},"src/Plan/PlayFlow.html":{"url":"src/Plan/PlayFlow.html","title":"プレイフローデザイン","keywords":"","body":"プレイフローデザイン 通常プレイフロー 開店準備 メールチェック 予定チェック 前日売り上げチェック 入荷データチェック プライズ入替予定作成 スタッフの役割・作業割り振り作成 開店～中間切り替え 基本は自動進行 その日のスタッフによって予定に対する作業進行度が変わる 中間切り替え～閉店 ペイアウト管理作業 営業中は予定に応じてイベント発生 定例会議 採用面接 プレイフロー中に発生するミニゲーム的ななにか 勤務シフト作成 入替予定表作成 ペイアウト管理指示の作成 レイアウト作成 プライズゲーム調整 ビデオゲームメンテナンス 売上の発生 各種パラメータの結果に応じて、各筐体が時間経過に応じて自動で売上を発生させる 影響を及ぼすパラメータ 客数×客単価 客の好みジャンル トレンド 筐体の設置場所 筐体の状態 フロアスタッフの状態 お店の状態 "}}